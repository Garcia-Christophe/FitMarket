# Image gradle avec le jdk17
image: gradle:7.3.3-jdk17-alpine

# Etapes du pipeline
stages:
  - ‚öôÔ∏è Build
  - üß™ Test
  - üöÄ Deploy

# Build : Web
# V√©rification de la pr√©sence de ./fitmarket/package.json
build-web:
  stage: ‚öôÔ∏è Build
  allow_failure: false
  script:
    - echo "V√©rification de la pr√©sence de ./fitmarket/package.json..."
    - |
      if [ -f ./fitmarket/package.json ]; then
        echo "Web: Fichier ./fitmarket/package.json pr√©sent."
      else
        echo "Web: Fichier ./fitmarket/package.json absent !"
        exit 1
      fi

# Build : Android
# V√©rification de la pr√©sence de ./README.md
build-android:
  stage: ‚öôÔ∏è Build
  allow_failure: false
  script:
    - echo "V√©rification de la pr√©sence de ./README.md..."
    - |
      if [ -f ./README.md ]; then
        echo "Android: Fichier ./README.md pr√©sent."
      else
        echo "Android: Fichier ./README.md absent !"
        exit 1
      fi

# Build : Spring
# V√©rification de la pr√©sence de ./back/fitmarket/src/main/java/com/m2/tiila/fitmarket/FitmarketApplication.java
build-spring:
  stage: ‚öôÔ∏è Build
  allow_failure: false
  script:
    - echo "V√©rification de la pr√©sence de ./back/fitmarket/src/main/java/com/m2/tiila/fitmarket/FitmarketApplication.java..."
    - |
      if [ -f ./back/fitmarket/src/main/java/com/m2/tiila/fitmarket/FitmarketApplication.java ]; then
        echo "Spring: Fichier ./back/fitmarket/src/main/java/com/m2/tiila/fitmarket/FitmarketApplication.java pr√©sent."
      else
        echo "Spring: Fichier ./back/fitmarket/src/main/java/com/m2/tiila/fitmarket/FitmarketApplication.java absent !"
        exit 1
      fi

# Build : BDD
# V√©rification de la pr√©sence de ./bdd/schema_bdd.sql
build-bdd:
  stage: ‚öôÔ∏è Build
  allow_failure: false
  script:
    - echo "V√©rification de la pr√©sence de ./bdd/schema_bdd.sql..."
    - |
      if [ -f ./bdd/schema_bdd.sql ]; then
        echo "BDD: Fichier ./bdd/schema_bdd.sql pr√©sent."
      else
        echo "BDD: Fichier ./bdd/schema_bdd.sql absent !"
        exit 1
      fi

# Test : Web
# V√©rification du port utilis√© par l'application
test-web:
  stage: üß™ Test
  allow_failure: false
  script:
    - echo "Tests de la partie Web..."
    - |
      if grep -q "port: 3000" ./fitmarket/vite.config.mjs; then
        echo "Le port de l'application web est bien 3000."
      else
        echo "Le port de l'application web n'est pas 3000 !"
        exit 1
      fi
  needs:
    - job: "build-web"
      artifacts: true

# Test : Android
# ...
test-android:
  stage: üß™ Test
  allow_failure: false
  script:
    - echo "Tests de la partie Android..."
    - |
      if [ -f ./README.md ]; then
        echo "Android: Fichier ./README.md pr√©sent."
      else
        echo "Android: Fichier ./README.md absent !"
        exit 1
      fi
  needs:
    - job: "build-android"
      artifacts: true

# Test : Spring
# Lancement de check de Gradlew
test-spring:
  stage: üß™ Test
  allow_failure: false
  script:
    - echo "Tests de la partie Spring..."
    - cd back/fitmarket
    - chmod +x ./gradlew
    - ./gradlew check
    - cd ../..
  needs:
    - job: "build-spring"
      artifacts: true

# Test : BDD
# V√©rification de la cr√©ation de TOUTES les tables
test-bdd:
  stage: üß™ Test
  allow_failure: false
  script:
    - echo "Tests de la partie BDD..."
    - |
      if grep -qE 'CREATE\s+TABLE\s+member\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+product\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+image_product\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+classes\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+comment\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+image_comment\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+orders\b' bdd/schema_bdd.sql && \
        grep -qE 'CREATE\s+TABLE\s+order_product\b' bdd/schema_bdd.sql; then
        echo "Toutes les tables sont pr√©sentes."
      else
        echo "Une ou plusieurs tables sont manquantes !"
        exit 1
      fi
  needs:
    - job: "build-bdd"
      artifacts: true

# Deploy
# ...
deploy-job:
  stage: üöÄ Deploy
  allow_failure: false
  environment: production
  script:
    - echo "D√©ploiement de l'application..."
    - echo "Application d√©ploy√©e avec succ√®s."
  needs:
    - "test-web"
    - "test-android"
    - "test-spring"
    - "test-bdd"
